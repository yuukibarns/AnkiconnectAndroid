name: Android CI & Release

on:
  push:
    branches: ["master"]
    tags: ["v*"]  # Trigger on tags like v1.0.0
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk  # Path to your APK file(s)

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      # Download the artifact from previous job
      - name: Download APK Artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk  # Must match upload-artifact name
          path: ./artifacts/  # Custom download path

      # Create release and upload assets
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: "Production APK"
          draft: false
          prerelease: false

      # Upload the specific APK file
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/app-release-unsigned.apk  # Path to downloaded APK
          asset_name: app-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
